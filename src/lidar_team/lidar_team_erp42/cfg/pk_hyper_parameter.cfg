#!/usr/bin/env python

PACKAGE = "lidar_team_erp42"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


gen.add("pk_minPoints", int_t, 0, "pk_minPoints", 10, 1, 100)
gen.add("pk_epsilon", double_t, 0, "pk_epsilon", 0.15, 0, 20)
gen.add("pk_minClusterSize", int_t, 0, "pk_minClusterSize", 30, 1, 100)
gen.add("pk_maxClusterSize", double_t, 0, "pk_maxClusterSize", 300, 1, 100000)

#xMaxROI = 10
gen.add("pk_xMinROI", double_t, 0, "pk_xMinROI", 1.5, -200, 10)
gen.add("pk_xMaxROI", double_t, 0, "pk_xMaxROI", 4.0, -10, 200)
gen.add("pk_yMinROI", double_t, 0, "pk_yMinROI", -3.0, -200, 10)
gen.add("pk_yMaxROI", double_t, 0, "pk_yMaxROI", 0.0, -10, 200)
gen.add("pk_zMinROI", double_t, 0, "pk_zMinROI", -0.65, -2, 0)
gen.add("pk_zMaxROI", double_t, 0, "pk_zMaxROI", 3.0, -2, 100)

gen.add("pk_xMinBoundingBox", double_t, 0, "pk_xMinBoundingBox", 0.05, 0, 10);
gen.add("pk_xMaxBoundingBox", double_t, 0, "pk_xMaxBoundingBox", 0.55, 0, 10);
gen.add("pk_yMinBoundingBox", double_t, 0, "pk_yMinBoundingBox", 0.05, 0, 10);
gen.add("pk_yMaxBoundingBox", double_t, 0, "pk_yMaxBoundingBox", 0.55, 0, 10);
gen.add("pk_zMinBoundingBox", double_t, 0, "pk_zMinBoundingBox", 0.05, 0, 0.1);
gen.add("pk_zMaxBoundingBox", double_t, 0, "pk_zMaxBoundingBox", 0.85, 0, 10);

exit(gen.generate(PACKAGE, "parallel_parking", "pk_hyper_parameter"))




# PACKAGE = "lidar_team_erp42"

# from dynamic_reconfigure.parameter_generator_catkin import *

# gen = ParameterGenerator()


# gen.add("pk_minPoints", int_t, 0, "pk_minPoints", 10, 1, 100)
# gen.add("pk_epsilon", double_t, 0, "pk_epsilon", 0.4, 0, 20)
# gen.add("pk_minClusterSize", int_t, 0, "pk_minClusterSize", 30, 1, 100)
# gen.add("pk_maxClusterSize", double_t, 0, "pk_maxClusterSize", 1000, 1, 100000)

# #xMaxROI = 10
# gen.add("pk_xMinROI", double_t, 0, "pk_xMinROI", 1.0, -200, 10)
# gen.add("pk_xMaxROI", double_t, 0, "pk_xMaxROI", 4.0, -10, 200)
# gen.add("pk_yMinROI", double_t, 0, "pk_yMinROI", -2.0, -200, 10)
# gen.add("pk_yMaxROI", double_t, 0, "pk_yMaxROI", 0.0, -10, 200)
# gen.add("pk_zMinROI", double_t, 0, "pk_zMinROI", -0.50, -2, 0)
# gen.add("pk_zMaxROI", double_t, 0, "pk_zMaxROI", 3.0, -2, 100)

# gen.add("pk_xMinBoundingBox", double_t, 0, "pk_xMinBoundingBox", 0.05, 0, 10);
# gen.add("pk_xMaxBoundingBox", double_t, 0, "pk_xMaxBoundingBox", 1.0, 0, 10);
# gen.add("pk_yMinBoundingBox", double_t, 0, "pk_yMinBoundingBox", 0.05, 0, 10);
# gen.add("pk_yMaxBoundingBox", double_t, 0, "pk_yMaxBoundingBox", 1.0, 0, 10);
# gen.add("pk_zMinBoundingBox", double_t, 0, "pk_zMinBoundingBox", 0.05, 0, 0.1);
# gen.add("pk_zMaxBoundingBox", double_t, 0, "pk_zMaxBoundingBox", 2.0, 0, 10);

# exit(gen.generate(PACKAGE, "parallel_parking", "pk_hyper_parameter"))
