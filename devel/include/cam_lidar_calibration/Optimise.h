// Generated by gencpp from file cam_lidar_calibration/Optimise.msg
// DO NOT EDIT!


#ifndef CAM_LIDAR_CALIBRATION_MESSAGE_OPTIMISE_H
#define CAM_LIDAR_CALIBRATION_MESSAGE_OPTIMISE_H

#include <ros/service_traits.h>


#include <cam_lidar_calibration/OptimiseRequest.h>
#include <cam_lidar_calibration/OptimiseResponse.h>


namespace cam_lidar_calibration
{

struct Optimise
{

typedef OptimiseRequest Request;
typedef OptimiseResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Optimise
} // namespace cam_lidar_calibration


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::cam_lidar_calibration::Optimise > {
  static const char* value()
  {
    return "6fab8216834f6ade06f14ecf35aff91a";
  }

  static const char* value(const ::cam_lidar_calibration::Optimise&) { return value(); }
};

template<>
struct DataType< ::cam_lidar_calibration::Optimise > {
  static const char* value()
  {
    return "cam_lidar_calibration/Optimise";
  }

  static const char* value(const ::cam_lidar_calibration::Optimise&) { return value(); }
};


// service_traits::MD5Sum< ::cam_lidar_calibration::OptimiseRequest> should match
// service_traits::MD5Sum< ::cam_lidar_calibration::Optimise >
template<>
struct MD5Sum< ::cam_lidar_calibration::OptimiseRequest>
{
  static const char* value()
  {
    return MD5Sum< ::cam_lidar_calibration::Optimise >::value();
  }
  static const char* value(const ::cam_lidar_calibration::OptimiseRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::cam_lidar_calibration::OptimiseRequest> should match
// service_traits::DataType< ::cam_lidar_calibration::Optimise >
template<>
struct DataType< ::cam_lidar_calibration::OptimiseRequest>
{
  static const char* value()
  {
    return DataType< ::cam_lidar_calibration::Optimise >::value();
  }
  static const char* value(const ::cam_lidar_calibration::OptimiseRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::cam_lidar_calibration::OptimiseResponse> should match
// service_traits::MD5Sum< ::cam_lidar_calibration::Optimise >
template<>
struct MD5Sum< ::cam_lidar_calibration::OptimiseResponse>
{
  static const char* value()
  {
    return MD5Sum< ::cam_lidar_calibration::Optimise >::value();
  }
  static const char* value(const ::cam_lidar_calibration::OptimiseResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::cam_lidar_calibration::OptimiseResponse> should match
// service_traits::DataType< ::cam_lidar_calibration::Optimise >
template<>
struct DataType< ::cam_lidar_calibration::OptimiseResponse>
{
  static const char* value()
  {
    return DataType< ::cam_lidar_calibration::Optimise >::value();
  }
  static const char* value(const ::cam_lidar_calibration::OptimiseResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CAM_LIDAR_CALIBRATION_MESSAGE_OPTIMISE_H
